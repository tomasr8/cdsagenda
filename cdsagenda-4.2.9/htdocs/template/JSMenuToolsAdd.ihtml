<!-- JSMenuToolsAdd.ihtml, author T. Baron, Drag&Drop for time table edit -->

<SCRIPT TYPE="text/javascript" LANGUAGE="Javascript1.2">

function DRAG_dragTTE(e) {
	if (e == null) { e = window.event; }

        if (DRAG_dragging) {
		menu = getObject(DRAG_dragged);

		oldX = getLeft(menu);
		oldY = getTop(menu);

		if (e.clientX != null && e.pageX == null) {
			scX = parseInt(e.clientX);
			scY = parseInt(e.clientY);
		}
		else {
			scX = parseInt(e.pageX);
			scY = parseInt(e.pageY);
		}

		if (document.body && document.body.scrollLeft) 
		{ 
			leftOffset = parseInt(document.body.scrollLeft);
			topOffset = parseInt(document.body.scrollTop);
		}
		else
		{
			leftOffset = 0;
			topOffset = 0;
		}

		newX = oldX + scX - DRAG_lastX;
		newY = oldY + scY - DRAG_lastY;

		if (getObject('hourtable1'))
		{
			minX = getLeft(getObject('hourtable1'));
			minY = getTop(getObject('hourtable1'));
		}
		else
		{
			minX = getLeft(getObject('hour'+minH));
			minY = getTop(getObject('hour'+minH));
		}

		maxX = minX + 427 - 50;
		maxY = minY + (maxH-minH)*60*{jsmenutoolsadd_sizefactor};

		if (newX < minX) { newX = minX; }

		if (newX > maxX) { newX = maxX; }

		if (newY < minY) { newY = minY; }

		if (newY > maxY) { newY = maxY; }

                setTop(menu,newY);

		setIndic(newY);

		if (DRAGtype == 2)
		{
			thissession = getSession(menu);
			numdiv = 1;
			for (i=1;i<numtalks[thissession]+1;i++)
			{
				talk = sessions[thissession][i];
	
				if (talk != menu)
				{
					oldY = getTop(talk);

					newY = oldY + scY - DRAG_lastY + topOffset;

					if (newY < minY) { newY = minY; }
					if (newY > maxY) { newY = maxY; }

					setTop(talk,newY);
				}
			}
			numdiv++;
		}

		if (e.clientX != null && e.pageX == null) {
	        	DRAG_lastX = parseInt(e.clientX);
	        	DRAG_lastY = parseInt(e.clientY);
		}
		else {
	        	DRAG_lastX = parseInt(e.pageX);
	        	DRAG_lastY = parseInt(e.pageY);
		}
                return true;
        }
        else {
                return true;
        }
}

function DRAG_begindragTTE(e,menuName) {
	if (!menuName) { menuName = this.name; }
	menu = getObject(menuName);

	if (e.which == 1 || e.button == 1)
	{
		DRAG_dragged = menuName;

		if (document.all)
		{
			document.onmousemove=DRAG_dragTTE;
		}
		else if (DOM) {
     		   	document.onmousemove=DRAG_dragTTE;
		}
		else if (NS4)
		{
        	        this.captureEvents(Event.MOUSEMOVE);
     		   	this.onmousemove=DRAG_dragTTE;
		}

        	DRAG_dragging = true;

		if (e.clientX != null && e.pageX == null) {
	        	DRAG_lastX = parseInt(e.clientX);
	        	DRAG_lastY = parseInt(e.clientY);
		}
		else {
	        	DRAG_lastX = parseInt(e.pageX);
	        	DRAG_lastY = parseInt(e.pageY);
		}

		return true;
	}
	else
	{
             	/*Do any right mouse button processing here*/
		Initialize(menuName);
        	window.releaseEvents(Event.MOUSEMOVE);
        	this.onmousemove=null
             	return false;
	}
	
}



function DRAG_enddragTTE(e) {
	if (DRAG_dragging)
	{
		if (e.which == 1 || e.button == 1)
		{
			object = getObject(DRAG_dragged);

			if (NS4)
			{
        	        	this.releaseEvents(Event.MOUSEMOVE);
        			this.onmousemove=null
			}

			objectY = getTop(object);

			if (objectY%(5*{jsmenutoolsadd_sizefactor}) != 0)
			{
				newY = objectY - objectY%(5*{jsmenutoolsadd_sizefactor});
				setTop(object,newY);
				setYForm(DRAG_dragged,newY);

				if (DRAGtype == 2)
				{
					thissession = getSession(menu);
					numdiv = 1;
					for (i=1;i<numtalks[thissession]+1;i++)
					{
						talk = sessions[thissession][i];
		
						if (talk != menu)
						{
							oldY = getTop(talk);
							if(oldY%(5*{jsmenutoolsadd_sizefactor}) != 0)
							{
								newY = oldY - oldY%(5*{jsmenutoolsadd_sizefactor});
								setTop(talk,newY);
								setYForm(talk.id,newY);
							}
						}
			
					}
					numdiv++;
				}
			}
			else
			{
				newY = objectY;
				setYForm(DRAG_dragged,newY);
			}

			changed = 1;
        	       	DRAG_dragging=false;
			DRAG_dragged = '';
			return true;
		}
        	else {
        	        /*Do any right mouse button processing here*/
        	        return true;
        	}
	}
}

function getSession(menu)
{
	for (i=1;i<numsession+1;i++)
	{
		for (j=1;j<numtalks[i]+1;j++)
		{
			if (menu == sessions[i][j])
			{
				return i;
			}
		}
	}
	return 0;
}

</SCRIPT>

<!-- End JSMenuToolsAdd.ihtml -->